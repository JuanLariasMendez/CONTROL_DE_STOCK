package com.alura.jdbc.dao;import com.alura.jdbc.modelo.Categoria;import com.alura.jdbc.modelo.Producto;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.util.ArrayList;import java.util.List;public class CategoriaDAO {    private Connection con;    public CategoriaDAO(Connection con) {        this.con=con;    }    public List<Categoria> lista() {        List<Categoria> resultado = new ArrayList<>();        try {            var querySelect="SELECT ID, NOMBRE FROM CATEGORIA";            System.out.println(querySelect);            final PreparedStatement statement = con.prepareStatement(querySelect);            try(statement) {                final ResultSet resultSet = statement.executeQuery();//Con executeQuery() tenemos acceso directo para ejecutar la query y ya tomar el resultado.) {                try(resultSet){                    //con este resultSet utilizando wile, nosotros vamos a tomar cada fila de resultado para crear un objeto del tipo categoría y agregar al listado de resultados.                    while(resultSet.next()){                        var categoria = new Categoria(                                resultSet.getInt("ID"),                                resultSet.getString("NOMBRE"));//tomamos las categorias de sus columnas                        resultado.add(categoria);//la agregamos a la lista                    }                }            };            //statement.execute();//devuelve un boolean y después tenemos que hacer un statement.getResultSet para tomar los resultados        } catch (SQLException e) {            throw new RuntimeException(e);        }        return resultado;    }    //método para listar a las categorías con sus productos    public List<Categoria> listarConProductos() {        List<Categoria> resultado = new ArrayList<>();        try {            String querySelect="SELECT C.ID, C.NOMBRE, P.ID, P.NOMBRE, P.CANTIDAD "                    + "FROM CATEGORIA C "                    + "INNER JOIN PRODUCTO P ON C.ID = P.categoriaId";            System.out.println(querySelect);            final PreparedStatement statement = con.prepareStatement(                    querySelect);            try(statement) {                final ResultSet resultSet = statement.executeQuery();//Con executeQuery() tenemos acceso directo para ejecutar la query y ya tomar el resultado.) {                try(resultSet){                    //con este resultSet utilizando wile, nosotros vamos a tomar cada fila de resultado para crear un objeto del tipo categoría y agregar al listado de resultados.                    /*                    * Vamos a estar agregando las categorías en el listado y todas las                    * veces que pasemos acá en el WHILE por cada categoría, vamos a ver                    * si ella ya está agregada en el resultado. Si está agregada, nosotros                    * la utilizamos y seguimos con el flujo. Si no está agregada,                    * nosotros la creamos y la agregamos ahí en el listado.                    */                    while(resultSet.next()){                        Integer categoriaId = resultSet.getInt("C.ID");                        String categoriaNombre = resultSet.getString("C.NOMBRE");                        /*                        Vamos a hacer un resultado.stream, vamos a filtrar, hacer un filter de la categoría que está acá en la stream, en donde la cat.getId, o sea, el id de la categoría sea igual a categoríaId. Y si encontramos cualquier resultado de esa categoría con id igual, nosotros la vamos a utilizar.                        Si nosotros no lo encontramos, o sea, vamos a tener acá una condición de .orElseGet, si nosotros no encontramos la categoría, vamos a tener una función acá que vamos a hacer lo siguiente. Vamos a hacer un new categoría y vamos a agregarla al resultado.                         */                        Categoria categoria = resultado                                .stream()                                .filter(cat -> cat.getId().equals(categoriaId))                                .findAny().orElseGet(()->{                                    Categoria cat = new Categoria(                                            categoriaId,categoriaNombre);//tomamos las categorias de sus columnas                                    resultado.add(cat);//la agregamos a la lista                                    return cat;                        });                        //Lógica para corregit las Query N+1                        Producto producto = new Producto(                                resultSet.getInt("P.ID"),                                resultSet.getString("P.NOMBRE"),                                resultSet.getInt("P.CANTIDAD"));                        categoria.agregar(producto);                    }                }            }            //statement.execute();//devuelve un boolean y después tenemos que hacer un statement.getResultSet para tomar los resultados        } catch (SQLException e) {            throw new RuntimeException(e);        }        return resultado;    }}